Account
	_id: { type: ID },
	name: { type: String, required: true, unique: true }
	url: { type: String, required: true }, //The unique URL where the site lives
	description: { type: String }
	addresses: [ Address ]
	created: { type: Date, required: true }
	creator: { type: Schema.Types.ObjectId, ref: 'User' }
	last_updated: { type: Date, required: true, default: Date.Now() }
	last_updated_by: { type: Schema.Types.ObjectId, ref: 'User' }
	
Address
    address_type: { type: String, enum: ["Home","Work","Mailing"]}
    venue: String //Optional venue name at the address, useful for names of buildings. (ex: Smith Hall)
    address_line: String
    city: String,
    state: String,
    zip: String,
    country: String, //The country code according to ISO 3166-1 Alpha-2.
    location: { latitude: Number, longitude: Number, accuracy: { type: String, enum: ["Rooftop","Approximate"]} }, //An object hash representing the geocoded location information for the address.
    
User
	_id: { type: ID },
	email: { type: String, trim: true, unique: true, index: true },
	permissions: [ UserPermission ],
	created: { type: Date, required: true }
	creator: { type: Schema.Types.ObjectId, ref: 'User' }
	last_updated: { type: Date, required: true, default: Date.Now() }
	last_updated_by: { type: Schema.Types.ObjectId, ref: 'User' }

UserPermission
	account: { type: Schema.Types.ObjectId, ref: 'Account' }
	permissions: [ permission ]
		
Program	
	_id: { type: ID },
	name: { type: String, required: true, unique: true }
	created: { type: Date, required: true }
	creator: User
	last_updated: { type: Date, required: true, default: Date.Now() }
	last_updated_by: User
		
Student
	_id: { type: ID }
	account: { type: Schema.Types.ObjectId, ref: 'Account' }
	first_name: { type: String }
	last_name: { type: String, required: true, index: true }
	middle_name: { type: String }
	student_id: { type: String }
	addresses: [ Address ]
	school_district: { type: String }
	programs: [ StudentProgram ]
	created: { type: Date, required: true }
	creator: { type: Schema.Types.ObjectId, ref: 'User' }
	last_updated: { type: Date, required: true, default: Date.Now() }
	last_updated_by: { type: Schema.Types.ObjectId, ref: 'User' }
	
StudentProgram
	program: { type: Schema.Types.ObjectId, ref: 'Program' }
	